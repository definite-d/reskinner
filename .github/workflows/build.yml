name: PyPi and GitHub Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v6
        with:
          python-version: '3.7.9'
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
      - name: Build artifact
        run: uv build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  publish-testpypi:
    needs: build
    name: Publish to TestPyPi
    environment:
      name: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Publish to TestPyPi
        run: uv publish --index testpypi

  publish-pypi:
    needs: publish-testpypi
    name: Publish to PyPi
    environment:
      name: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Publish to PyPi
        run: uv publish

  release:
    name: GitHub Release
    environment:
      name: pypi
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: publish-pypi
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Get tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          files: dist/*
          name: ${{ steps.get_version.outputs.VERSION }} Release.
          generate_release_notes: true
